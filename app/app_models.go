// Code generated by github.com/dashotv/golem. DO NOT EDIT.
package app

import (
	"go.uber.org/zap"

	"github.com/dashotv/grimoire"
)

func init() {
	initializers = append(initializers, setupDb)
	healthchecks["db"] = checkDb
}

func setupDb(app *Application) error {
	db, err := NewConnector(app)
	if err != nil {
		return err
	}

	app.DB = db
	return nil
}

func checkDb(app *Application) (err error) {
	// TODO: Check DB connection
	return nil
}

type Connector struct {
	Log      *zap.SugaredLogger
	Channels *grimoire.Store[*Channels]
	Watches  *grimoire.Store[*Watches]
}

func NewConnector(app *Application) (*Connector, error) {
	var s *Connection
	var err error

	s, err = app.Config.ConnectionFor("channels")
	if err != nil {
		return nil, err
	}
	channels, err := grimoire.New[*Channels](s.URI, s.Database, s.Collection)
	if err != nil {
		return nil, err
	}

	s, err = app.Config.ConnectionFor("watches")
	if err != nil {
		return nil, err
	}
	watches, err := grimoire.New[*Watches](s.URI, s.Database, s.Collection)
	if err != nil {
		return nil, err
	}

	c := &Connector{
		Log:      app.Log.Named("db"),
		Channels: channels,
		Watches:  watches,
	}

	return c, nil
}

type Channels struct { // model
	grimoire.Document `bson:",inline"` // includes default model settings
	//ID        primitive.ObjectID `bson:"_id,omitempty" json:"id"`
	//CreatedAt time.Time          `bson:"created_at" json:"created_at"`
	//UpdatedAt time.Time          `bson:"updated_at" json:"updated_at"`
	GuildId   string `bson:"guild_id" json:"guild_id"`
	ChannelId string `bson:"channel_id" json:"channel_id"`
	Name      string `bson:"name" json:"name"`
}

type Watches struct { // model
	grimoire.Document `bson:",inline"` // includes default model settings
	//ID        primitive.ObjectID `bson:"_id,omitempty" json:"id"`
	//CreatedAt time.Time          `bson:"created_at" json:"created_at"`
	//UpdatedAt time.Time          `bson:"updated_at" json:"updated_at"`
	Id        string `bson:"id" json:"id"`
	UserId    string `bson:"user_id" json:"user_id"`
	Username  string `bson:"username" json:"username"`
	GuildId   string `bson:"guild_id" json:"guild_id"`
	ChannelId string `bson:"channel_id" json:"channel_id"`
	Game      string `bson:"game" json:"game"`
}
